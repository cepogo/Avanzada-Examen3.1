name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build backend with Maven
        run: |
          cd ProyectoClinica
          mvn clean package -DskipTests

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.11.1'

      - name: Install dependencies and build frontend
        run: |
          cd clinica_frontend
          npm install
          export CI=false
          npm run build
        env:
          CI: false

  deploy:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push backend Docker image
        run: |
          cd ProyectoClinica
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/clinica-backend:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/clinica-backend:latest

      - name: Build and push frontend Docker image
        run: |
          cd clinica_frontend
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/clinica-frontend:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/clinica-frontend:latest

      - name: Set up Minikube
        uses: medyagh/setup-minikube@master

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure Minikube
        run: |
          minikube start --driver=docker
          minikube status
          kubectl config use-context minikube
          kubectl cluster-info

      - name: Deploy to Kubernetes
        run: |
          echo "Applying Kubernetes configurations..."
          kubectl apply -f k8s/mysql-pvc.yaml --validate=false
          kubectl apply -f k8s/mysql-deployment.yaml --validate=false
          kubectl apply -f k8s/mysql-service.yaml --validate=false
          kubectl apply -f k8s/backend-deployment.yaml --validate=false
          kubectl apply -f k8s/backend-service.yaml --validate=false
          kubectl apply -f k8s/frontend-deployment.yaml --validate=false
          kubectl apply -f k8s/frontend-service.yaml --validate=false
          
          echo "Waiting for deployments to be ready..."
          kubectl rollout status deployment/mysql
          kubectl rollout status deployment/clinica-backend
          kubectl rollout status deployment/clinica-frontend
          
          echo "Verifying deployment..."
          kubectl get pods
          kubectl get services

      - name: Verify Deployment
        run: |
          echo "Verifying all resources..."
          kubectl get all
          echo "Checking pod logs..."
          for pod in $(kubectl get pods -o name); do
            echo "=== Logs for $pod ==="
            kubectl logs $pod --tail=50 || true
          done

      - name: Show Minikube IP and URLs
        run: |
          echo "Minikube IP:"
          minikube ip
          echo "Service URLs:"
          minikube service list