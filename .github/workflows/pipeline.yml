name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build backend with Maven
        run: |
          cd ProyectoClinica
          mvn clean package -DskipTests

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.11.1'

      - name: Install dependencies and build frontend
        run: |
          cd clinica_frontend
          npm install
          export CI=false
          npm run build
        env:
          CI: false

  deploy:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Configurar Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login a Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Construir y pushear imagen backend
      - name: Build and push backend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./ProyectoClinica
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/clinica-backend:latest

      # Construir y pushear imagen frontend
      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./clinica_frontend
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/clinica-frontend:latest

      - name: Deploy to Kubernetes
        run: |
          echo "Deploying to Kubernetes..."
          # Aqu√≠ puedes agregar los comandos para desplegar en Kubernetes
          # Por ejemplo, usando kubectl para aplicar los archivos YAML de Kubernetes